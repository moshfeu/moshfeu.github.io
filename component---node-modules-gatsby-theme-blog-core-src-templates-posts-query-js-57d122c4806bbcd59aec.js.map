{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-blog/src/components/post-link.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-list.js","webpack:///./src/gatsby-theme-blog/components/posts.js","webpack:///./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/posts.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/posts-query.js","webpack:///./src/gatsby-theme-blog/components/seo.js"],"names":["PostLink","title","slug","date","excerpt","h2","sx","mb","a","as","Link","textDecoration","to","p","PostList","posts","map","node","key","Posts","location","siteTitle","socialLinks","PostsWrapper","data","site","allBlogPost","nodes","siteMetadata","social","query","PostsPage","SEO","description","lang","meta","imageSource","imageAlt","canonical","useStaticQuery","metaDescription","image","siteUrl","imageAltText","name","content","property","author","concat","htmlAttributes","titleTemplate","link","rel","href","defaultProps"],"mappings":"kLA8BeA,EA1BE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,QAAtB,OACf,2BACE,0BACE,YAAC,IAAOC,GAAR,CACEC,GAAI,CACFC,GAAI,IAGN,YAAC,IAAOC,EAAR,CACEC,GAAIC,IACJJ,GAAI,CACFK,eAAe,QAEjBC,GAAIV,GAEHD,GAASC,IAGd,yBAAQC,IAEV,2BACE,YAAC,IAAOU,EAAR,KAAWT,MCbFU,IARE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACf,8BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,YAAC,EAAD,aAAUC,IAAKD,EAAKf,MAAUe,U,wJCUrBE,EAXD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUL,EAAb,EAAaA,MAAOM,EAApB,EAAoBA,UAApB,EAA+BC,YAA/B,OACZ,8BACE,YAAC,IAAD,CAAQF,SAAUA,EAAUnB,MAAOoB,GACjC,YAAC,IAAD,CAAKpB,MAAM,SACX,wBACE,YAAC,IAAD,CAAUc,MAAOA,QCIVQ,EAZM,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,SAAUI,EAAW,EAAXA,KACxBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACd,OACE,YAAC,EAAD,CACEN,SAAUA,EACVL,MAAOW,EAAYC,MACnBN,UAAWI,EAAKG,aAAa3B,MAC7BqB,YAAaG,EAAKG,aAAaC,UCLxBC,GAFEC,YAEG,e,2GCElB,SAASC,EAAT,GAQI,IAPFC,EAOC,EAPDA,YACAC,EAMC,EANDA,KACAC,EAKC,EALDA,KACAlC,EAIC,EAJDA,MACAmC,EAGC,EAHDA,YACAC,EAEC,EAFDA,SACAC,EACC,EADDA,UAEQb,EAASc,YAAe,aAAxBd,KAeFe,EAAkBP,GAAeR,EAAKG,aAAaK,YACnDQ,EAAQL,EAAW,GAClBX,EAAKG,aAAac,QAAUN,EAC/B,KACEO,EAAeN,GAAYG,EAiEjC,OAhEAL,EAAO,sBACFA,GADE,CAEL,CACES,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAAS5C,GAEX,CACE6C,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASpB,EAAKG,aAAamB,QAE7B,CACEH,KAAK,gBACLC,QAAS5C,GAEX,CACE2C,KAAK,sBACLC,QAASL,KAGVQ,OACCZ,EACI,CACE,CACEQ,KAAK,WACLC,QAASJ,GAEX,CACEG,KAAK,eACLC,QAASF,GAEX,CACEC,KAAK,gBACLC,QAASJ,GAEX,CACEG,KAAK,oBACLC,QAASF,GAEX,CACEC,KAAK,eACLC,QAAQ,wBAGZ,CACE,CACED,KAAK,eACLC,QAAQ,aAIjBG,OAAOb,GAGR,YAAC,IAAD,CACEc,eAAgB,CACdf,QAEFjC,MAAOA,EACPiD,cAAa,QAAUzB,EAAKG,aAAa3B,MACzCkC,KAAMA,EACNgB,KACEb,EAAY,CAAC,CAAEc,IAAK,YAAalC,IAAKoB,EAAWe,KAAMf,IAAe,KAM9EN,EAAIsB,aAAe,CACjBpB,KAAK,KACLC,KAAM,IAYOH","file":"component---node-modules-gatsby-theme-blog-core-src-templates-posts-query-js-57d122c4806bbcd59aec.js","sourcesContent":["/** @jsx jsx */\nimport { Styled, jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ title, slug, date, excerpt }) => (\n  <article>\n    <header>\n      <Styled.h2\n        sx={{\n          mb: 1,\n        }}\n      >\n        <Styled.a\n          as={Link}\n          sx={{\n            textDecoration: `none`,\n          }}\n          to={slug}\n        >\n          {title || slug}\n        </Styled.a>\n      </Styled.h2>\n      <small>{date}</small>\n    </header>\n    <section>\n      <Styled.p>{excerpt}</Styled.p>\n    </section>\n  </article>\n)\n\nexport default PostLink\n","import React from \"react\"\n\nimport PostLink from \"./post-link\"\n\nconst PostList = ({ posts }) => (\n  <>\n    {posts.map((node) => (\n      <PostLink key={node.slug} {...node} />\n    ))}\n  </>\n)\n\nexport default PostList\n","import React from \"react\"\n\nimport SEO from \"gatsby-theme-blog/src/components/seo\"\nimport PostList from \"gatsby-theme-blog/src/components/post-list\"\nimport Layout from \"../components/layout\"\n\nconst Posts = ({ location, posts, siteTitle, socialLinks }) => (\n  <>\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      <main>\n        <PostList posts={posts} />\n      </main>\n    </Layout>\n  </>\n)\n\nexport default Posts","import React from \"react\"\nimport Posts from \"../../components/posts\"\n\nconst PostsWrapper = ({ location, data }) => {\n  const { site, allBlogPost } = data\n  return (\n    <Posts\n      location={location}\n      posts={allBlogPost.nodes}\n      siteTitle={site.siteMetadata.title}\n      socialLinks={site.siteMetadata.social}\n    />\n  )\n}\n\nexport default PostsWrapper\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/posts\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query PostsQuery {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    allBlogPost(sort: { fields: [date, title], order: DESC }, limit: 1000) {\n      nodes {\n        id\n        excerpt\n        slug\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n","// @ts-check\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  title,\n  imageSource,\n  imageAlt,\n  canonical,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const image = imageSource\n    ? `${site.siteMetadata.siteUrl}${imageSource}`\n    : null\n  const imageAltText = imageAlt || metaDescription\n  meta = [\n    ...meta,\n    {\n      name: `description`,\n      content: metaDescription,\n    },\n    {\n      property: `og:title`,\n      content: title,\n    },\n    {\n      property: `og:description`,\n      content: metaDescription,\n    },\n    {\n      property: `og:type`,\n      content: `website`,\n    },\n    {\n      name: `twitter:creator`,\n      content: site.siteMetadata.author,\n    },\n    {\n      name: `twitter:title`,\n      content: title,\n    },\n    {\n      name: `twitter:description`,\n      content: metaDescription,\n    },\n  ]\n    .concat(\n      imageSource\n        ? [\n            {\n              name: `og:image`,\n              content: image,\n            },\n            {\n              name: `og:image:alt`,\n              content: imageAltText,\n            },\n            {\n              name: `twitter:image`,\n              content: image,\n            },\n            {\n              name: `twitter:image:alt`,\n              content: imageAltText,\n            },\n            {\n              name: `twitter:card`,\n              content: `summary_large_image`,\n            },\n          ]\n        : [\n            {\n              name: `twitter:card`,\n              content: `summary`,\n            },\n          ]\n    )\n    .concat(meta)\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={meta}\n      link={\n        canonical ? [{ rel: \"canonical\", key: canonical, href: canonical }] : []\n      }\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  title: PropTypes.string.isRequired,\n  imageSource: PropTypes.string,\n  canonical: PropTypes.string,\n}\n\nexport default SEO\n"],"sourceRoot":""}