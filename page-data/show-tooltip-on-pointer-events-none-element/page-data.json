{"componentChunkName":"component---src-components-post-js","path":"/show-tooltip-on-pointer-events-none-element/","result":{"data":{"site":{"siteMetadata":{"title":"Moshe Feuchtwanger","social":[{"name":"twitter","url":"https://twitter.com/moshfeu"},{"name":"github","url":"https://github.com/moshfeu"},{"name":"linkedin","url":"https://www.linkedin.com/in/moshfeu/"},{"name":"stackoverflow","url":"https://stackoverflow.com/users/863110/mosh-feu"},{"name":"visualstudiocode","url":"https://marketplace.visualstudio.com/publishers/moshfeu"}]}},"mdx":{"id":"5459406e-5a74-56c9-8b61-9aa3450ea302","excerpt":"I'm a big fan of \"css only\" approaches ( For example ] and I'm sure I'm not alone. That's why I was so exsiting to get to know the  pointer…","body":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Show tooltip on pointer-events none element\",\n  \"tags\": [\"css\", \"pointer-events\"],\n  \"slug\": \"show-tooltip-on-pointer-events-none-element\",\n  \"date\": \"2021-02-21T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var _mdx, _mdx2, _mdx3, _mdx4, _mdx5, _mdx6;\n\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I'm a big fan of \\\"css only\\\" approaches (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/a/33931219/863110\"\n  }), \"For example\"), \"] and I'm sure I'm not alone. That's why I was so exsiting to get to know the\\xA0\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"pointer-events\")), \"\\xA0property.\\nWith \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prevent-default\"), \" we can \\\"disable\\\" non input elements such as links (even though it might not considered a good accessiblity approach)\\nBefore it came to our life we had to use code to stop the event when link is \\\"disabled\\\"\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"document.querySelector('a').addEventListener('click', e => {\\n  if (e.target.classList.contains('disabled')) {\\n    e.preventDefault();\\n  }\\n});\\n\")), mdx(\"p\", null, \"What about if this \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a\"), \" is added by code (React for example)? pretty much nightmare.\"), mdx(\"p\", null, \"But with css\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \"a.disabled {\\n  pointer-events: none;\\n}\\n\")), mdx(\"p\", null, \"Magic!\"), mdx(\"h3\", null, \"Powerfull, right? Too powerful\"), mdx(\"p\", null, \"Let's go back to our example - a \\\"disabled\\\" link. Usually when an element disabled, we want to show a tooltip to explain why.\\nTo simplify the example, I'm using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"title\"), \" property so the browser will show a native tooltip. (Once again, it's probably not accessibility compliance, but it demonstrates a use case).\"), mdx(\"p\", null, \"Here is the code\"), mdx(\"iframe\", {\n    height: \"148\",\n    style: {\n      \"width\": \"100%\"\n    },\n    scrolling: \"no\",\n    title: \"ExNwKja\",\n    src: \"https://codepen.io/moshfeu/embed/preview/ExNwKja?height=148&theme-id=light&default-tab=html,result\",\n    frameBorder: \"no\",\n    loading: \"lazy\",\n    allowtransparency: \"true\",\n    allowFullScreen: \"true\"\n  }, \"See the Pen \", mdx(\"a\", (_mdx = {\n    href: \"https://codepen.io/moshfeu/pen/ExNwKja\",\n    \"data-tomark-pass\": true\n  }, _defineProperty(_mdx, \"data-tomark-pass\", true), _defineProperty(_mdx, \"data-tomark-pass\", true), _defineProperty(_mdx, \"data-tomark-pass\", true), _mdx), \"ExNwKja\"), \" by Mosh (\", mdx(\"a\", (_mdx2 = {\n    href: \"https://codepen.io/moshfeu\",\n    \"data-tomark-pass\": true\n  }, _defineProperty(_mdx2, \"data-tomark-pass\", true), _defineProperty(_mdx2, \"data-tomark-pass\", true), _defineProperty(_mdx2, \"data-tomark-pass\", true), _mdx2), \"@moshfeu\"), \") on \", mdx(\"a\", (_mdx3 = {\n    href: \"https://codepen.io\",\n    \"data-tomark-pass\": true\n  }, _defineProperty(_mdx3, \"data-tomark-pass\", true), _defineProperty(_mdx3, \"data-tomark-pass\", true), _defineProperty(_mdx3, \"data-tomark-pass\", true), _mdx3), \"CodePen\"), \".\"), mdx(\"p\", null, \"Now try to hover the link to get the tooltip displayed. Nothing happening, right?\\nThe thing is, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pointer-events: none\"), \" behaviour is that\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The element is never the target of pointer events\")), mdx(\"p\", null, \"\\\"Never\\\" means not only \\\"click\\\" events but also \\\"hover\\\". So when element has \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pointer-events: none\"), \" the browser doesn't apply the hover state therefor, the tooltip doesn't show.\"), mdx(\"h3\", null, \"The trick\"), mdx(\"p\", null, \"I didn't write all of the Gibrish above just to give a sad ending. The trick is simple, to add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pointer-events: none\"), \" only on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \":active\"), \" state. This trick lavarages the browser behaviour so first it's applying \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \":active\"), \" styles and then invoking the handlers (browser and site code).\"), mdx(\"iframe\", {\n    height: \"148\",\n    style: {\n      \"width\": \"100%\"\n    },\n    scrolling: \"no\",\n    title: \"dyOVMMN\",\n    src: \"https://codepen.io/moshfeu/embed/preview/dyOVMMN?height=148&theme-id=light&default-tab=html,result\",\n    frameBorder: \"no\",\n    loading: \"lazy\",\n    allowtransparency: \"true\",\n    allowFullScreen: \"true\"\n  }, \"See the Pen \", mdx(\"a\", (_mdx4 = {\n    href: \"<a href=\\\"https://codepen.io/moshfeu/pen/dyOVMMN\\\">https://codepen.io/moshfeu/pen/dyOVMMN\\\\\\\\\\\\\\\\\\\\\\\\</a>\",\n    \"data-tomark-pass\": true\n  }, _defineProperty(_mdx4, \"data-tomark-pass\", true), _defineProperty(_mdx4, \"data-tomark-pass\", true), _defineProperty(_mdx4, \"data-tomark-pass\", true), _mdx4), \"dyOVMMN\"), \" by Mosh (\", mdx(\"a\", (_mdx5 = {\n    href: \"<a href=\\\"https://codepen.io/moshfeu\\\">https://codepen.io/moshfeu</a>\",\n    \"data-tomark-pass\": true\n  }, _defineProperty(_mdx5, \"data-tomark-pass\", true), _defineProperty(_mdx5, \"data-tomark-pass\", true), _defineProperty(_mdx5, \"data-tomark-pass\", true), _mdx5), \"@moshfeu\"), \") on \", mdx(\"a\", (_mdx6 = {\n    href: \"https://codepen.io\",\n    \"data-tomark-pass\": true\n  }, _defineProperty(_mdx6, \"data-tomark-pass\", true), _defineProperty(_mdx6, \"data-tomark-pass\", true), _defineProperty(_mdx6, \"data-tomark-pass\", true), _mdx6), \"CodePen\"), \".\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/a/31355432/863110\"\n  }), \"https://stackoverflow.com/a/31355432/863110\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"show-tooltip-on-pointer-events-none-element","frontmatter":{"canonical":null,"title":"Show tooltip on pointer-events none element","subtitle":null,"keywords":null,"tags":["css","pointer-events"],"date":"February 21, 2021","image":null},"childMdxBlogPost":{"imageAlt":null,"imageCaptionLink":null,"imageCaptionText":null,"socialImage":null}},"previous":{"__typename":"MdxBlogPost","id":"2dd5238d-cfeb-58ff-a521-c54d1f539672","excerpt":"Disclaimer: I’m a Frontend developer at Wix, that’s right. But this post written as a result of my experience as a “regular” user. I even…","slug":"/build-your-own-analytics-tool-on-corvid-by-wix/","title":"Build Your Own Analytics Tool on Corvid by Wix","date":"September 24, 2020"},"next":null},"pageContext":{"id":"3695a60a-d843-5067-8ba7-5d0106839017","previousId":"2dd5238d-cfeb-58ff-a521-c54d1f539672","maxWidth":1380,"slug":"show-tooltip-on-pointer-events-none-element"}},"staticQueryHashes":["2744905544","3090755652","4064581832","511549514","764694655"]}